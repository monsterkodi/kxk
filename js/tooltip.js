(function() {
  /*
  000000000   0000000    0000000   000      000000000  000  00000000 
     000     000   000  000   000  000         000     000  000   000
     000     000   000  000   000  000         000     000  00000000 
     000     000   000  000   000  000         000     000  000      
     000      0000000    0000000   0000000     000     000  000      
  */
  var $, Tooltip, _, elem, empty, error, log, pos;

  ({elem, pos, empty, error, log, $, _} = require('./kxk'));

  Tooltip = class Tooltip {
    constructor(opt) {
      var base, base1, ref;
      this.del = this.del.bind(this);
      this.onHover = this.onHover.bind(this);
      this.popup = this.popup.bind(this);
      this.onLeave = this.onLeave.bind(this);
      this.opt = opt;
      if (!((ref = this.opt) != null ? ref.elem : void 0)) {
        return error("no elem for tooltip?");
      }
      if ((base = this.opt).delay == null) {
        base.delay = 700;
      }
      if ((base1 = this.opt).html == null) {
        base1.html = this.opt.text;
      }
      this.elem = this.opt.elem;
      if (_.isString(this.opt.elem)) {
        this.elem = $(this.opt.elem);
      }
      this.elem.tooltip = this;
      this.elem.addEventListener('mouseenter', this.onHover);
      this.elem.addEventListener('DOMNodeRemoved', this.del);
    }

    del(event) {
      if (this.opt.keep) {
        return;
      }
      if (this.elem == null) {
        return;
      }
      if (empty(event) || (event != null ? event.target : void 0) === this.elem) {
        delete this.elem.tooltip;
        this.onLeave();
        this.elem.removeEventListener('DOMNodeRemoved', this.del);
        return this.elem = null;
      }
    }

    onHover(event) {
      if (this.elem == null) {
        return;
      }
      if (this.div != null) {
        return;
      }
      clearTimeout(this.timer);
      this.timer = setTimeout(this.popup, this.opt.delay);
      this.elem.addEventListener('mouseleave', this.onLeave);
      return this.elem.addEventListener('mousedown', this.onLeave);
    }

    popup(event) {
      var br;
      if (this.elem == null) {
        return;
      }
      if (this.div != null) {
        return;
      }
      this.div = elem({
        id: 'tooltip',
        class: 'tooltip',
        html: this.opt.html
      });
      if (this.opt.parent) {
        this.opt.parent.appendChild(this.div);
      } else {
        document.body.appendChild(this.div);
      }
      br = this.elem.getBoundingClientRect();
      this.div.style.transform = "scaleY(1)";
      this.div.style.opacity = '1';
      if (this.opt.textSize != null) {
        this.div.style.fontSize = `${this.opt.textSize}px`;
      }
      if (this.opt.x != null) {
        this.div.style.left = `${br.left + this.opt.x}px`;
      }
      if (this.opt.y != null) {
        return this.div.style.top = `${br.bottom + this.opt.y}px`;
      }
    }

    onLeave(event, e) {
      var ref;
      if (this.elem != null) {
        this.elem.removeEventListener('mouseleave', this.onLeave);
        this.elem.removeEventListener('mousedown', this.onLeave);
      }
      clearTimeout(this.timer);
      this.timer = null;
      if ((ref = this.div) != null) {
        ref.remove();
      }
      return this.div = null;
    }

  };

  module.exports = Tooltip;

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcC5qcyIsInNvdXJjZVJvb3QiOiIuIiwic291cmNlcyI6WyIuLi9jb2ZmZWUvdG9vbHRpcC5jb2ZmZWUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFBQTs7Ozs7OztBQUFBLE1BQUEsQ0FBQSxFQUFBLE9BQUEsRUFBQSxDQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQSxLQUFBLEVBQUEsR0FBQSxFQUFBOztFQVFBLENBQUEsQ0FBRSxJQUFGLEVBQVEsR0FBUixFQUFhLEtBQWIsRUFBb0IsS0FBcEIsRUFBMkIsR0FBM0IsRUFBZ0MsQ0FBaEMsRUFBbUMsQ0FBbkMsQ0FBQSxHQUF5QyxPQUFBLENBQVEsT0FBUixDQUF6Qzs7RUFFTSxVQUFOLE1BQUEsUUFBQTtJQUVJLFdBQWEsSUFBQSxDQUFBO0FBRVQsVUFBQSxJQUFBLEVBQUEsS0FBQSxFQUFBO1VBWUosQ0FBQSxVQUFBLENBQUE7VUFXQSxDQUFBLGNBQUEsQ0FBQTtVQVVBLENBQUEsWUFBQSxDQUFBO1VBZ0JBLENBQUEsY0FBQSxDQUFBO01BbkRjLElBQUMsQ0FBQTtNQUVYLElBQXVDLGdDQUFRLENBQUUsY0FBakQ7QUFBQSxlQUFPLEtBQUEsQ0FBTSxzQkFBTixFQUFQOzs7WUFFSSxDQUFDLFFBQVM7OzthQUNWLENBQUMsT0FBUyxJQUFDLENBQUEsR0FBRyxDQUFDOztNQUVuQixJQUFDLENBQUEsSUFBRCxHQUFTLElBQUMsQ0FBQSxHQUFHLENBQUM7TUFDZCxJQUFzQixDQUFDLENBQUMsUUFBRixDQUFXLElBQUMsQ0FBQSxHQUFHLENBQUMsSUFBaEIsQ0FBdEI7UUFBQSxJQUFDLENBQUEsSUFBRCxHQUFPLENBQUEsQ0FBRSxJQUFDLENBQUEsR0FBRyxDQUFDLElBQVAsRUFBUDs7TUFDQSxJQUFDLENBQUEsSUFBSSxDQUFDLE9BQU4sR0FBZ0I7TUFFaEIsSUFBQyxDQUFBLElBQUksQ0FBQyxnQkFBTixDQUF1QixZQUF2QixFQUFxQyxJQUFDLENBQUEsT0FBdEM7TUFDQSxJQUFDLENB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QUFJLENBQUMsbUJBQU4sQ0FBMkIsV0FBM0IsRUFBeUMsSUFBQyxDQUFBLE9BQTFDLEVBRko7O01BSUEsWUFBQSxDQUFhLElBQUMsQ0FBQSxLQUFkO01BQ0EsSUFBQyxDQUFBLEtBQUQsR0FBUzs7V0FDTCxDQUFFLE1BQU4sQ0FBQTs7YUFDQSxJQUFDLENBQUEsR0FBRCxHQUFPO0lBVEY7O0VBckRiOztFQWdFQSxNQUFNLENBQUMsT0FBUCxHQUFpQjtBQTFFakIiLCJzb3VyY2VzQ29udGVudCI6WyIjIyNcbjAwMDAwMDAwMCAgIDAwMDAwMDAgICAgMDAwMDAwMCAgIDAwMCAgICAgIDAwMDAwMDAwMCAgMDAwICAwMDAwMDAwMCBcbiAgIDAwMCAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgICAgICAgIDAwMCAgICAgMDAwICAwMDAgICAwMDBcbiAgIDAwMCAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgICAgICAgIDAwMCAgICAgMDAwICAwMDAwMDAwMCBcbiAgIDAwMCAgICAgMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgICAgICAgIDAwMCAgICAgMDAwICAwMDAgICAgICBcbiAgIDAwMCAgICAgIDAwMDAwMDAgICAgMDAwMDAwMCAgIDAwMDAwMDAgICAgIDAwMCAgICAgMDAwICAwMDAgICAgICBcbiMjI1xuXG57IGVsZW0sIHBvcywgZW1wdHksIGVycm9yLCBsb2csICQsIF8gfSA9IHJlcXVpcmUgJy4va3hrJ1xuXG5jbGFzcyBUb29sdGlwXG4gICAgXG4gICAgY29uc3RydWN0b3I6IChAb3B0KSAtPlxuICAgICAgICBcbiAgICAgICAgcmV0dXJuIGVycm9yIFwibm8gZWxlbSBmb3IgdG9vbHRpcD9cIiBpZiBub3QgQG9wdD8uZWxlbVxuICAgICAgICBcbiAgICAgICAgQG9wdC5kZWxheSA/PSA3MDBcbiAgICAgICAgQG9wdC5odG1sICA/PSBAb3B0LnRleHRcbiAgICAgICAgXG4gICAgICAgIEBlbGVtID0gIEBvcHQuZWxlbVxuICAgICAgICBAZWxlbSA9JCBAb3B0LmVsZW0gaWYgXy5pc1N0cmluZyBAb3B0LmVsZW1cbiAgICAgICAgQGVsZW0udG9vbHRpcCA9IEAgICAgICBcblxuICAgICAgICBAZWxlbS5hZGRFdmVudExpc3RlbmVyICdtb3VzZWVudGVyJywgQG9uSG92ZXJcbiAgICAgICAgQGVsZW0uYWRkRXZlbnRMaXN0ZW5lciAnRE9NTm9kZVJlbW92ZWQnLCBAZGVsXG5cbiAgICBkZWw6IChldmVudCkgPT4gXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gaWYgQG9wdC5rZWVwXG4gICAgICAgIHJldHVybiBpZiBub3QgQGVsZW0/XG4gICAgICAgIFxuICAgICAgICBpZiBlbXB0eShldmVudCkgb3IgZXZlbnQ/LnRhcmdldCA9PSBAZWxlbVxuICAgICAgICAgICAgZGVsZXRlIEBlbGVtLnRvb2x0aXBcbiAgICAgICAgICAgIEBvbkxlYXZlKClcbiAgICAgICAgICAgIEBlbGVtLnJlbW92ZUV2ZW50TGlzdGVuZXIgJ0RPTU5vZGVSZW1vdmVkJywgQGRlbFxuICAgICAgICAgICAgQGVsZW0gPSBudWxsXG5cbiAgICBvbkhvdmVyOiAoZXZlbnQpID0+XG5cbiAgICAgICAgcmV0dXJuIGlmIG5vdCBAZWxlbT9cbiAgICAgICAgcmV0dXJuIGlmIEBkaXY/XG4gICAgICAgIGNsZWFyVGltZW91dCBAdGltZXJcbiAgICAgICAgQHRpbWVyID0gc2V0VGltZW91dCBAcG9wdXAsIEBvcHQuZGVsYXlcbiAgICAgICAgXG4gICAgICAgIEBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgJ21vdXNlbGVhdmUnLCBAb25MZWF2ZVxuICAgICAgICBAZWxlbS5hZGRFdmVudExpc3RlbmVyICdtb3VzZWRvd24nLCAgQG9uTGVhdmVcblxuICAgIHBvcHVwOiAoZXZlbnQpID0+XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gaWYgbm90IEBlbGVtP1xuICAgICAgICByZXR1cm4gaWYgQGRpdj9cbiAgICAgICAgQGRpdiA9IGVsZW0gaWQ6J3Rvb2x0aXAnLCBjbGFzczondG9vbHRpcCcsIGh0bWw6IEBvcHQuaHRtbFxuICAgICAgICBpZiBAb3B0LnBhcmVudFxuICAgICAgICAgICAgQG9wdC5wYXJlbnQuYXBwZW5kQ2hpbGQgQGRpdlxuICAgICAgICBlbHNlXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkIEBkaXZcbiAgICAgICAgYnIgPSBAZWxlbS5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKVxuICAgICAgICBAZGl2LnN0eWxlLnRyYW5zZm9ybSA9IFwic2NhbGVZKDEpXCJcbiAgICAgICAgQGRpdi5zdHlsZS5vcGFjaXR5ID0gJzEnXG4gICAgICAgIEBkaXYuc3R5bGUuZm9udFNpemUgPSBcIiN7QG9wdC50ZXh0U2l6ZX1weFwiIGlmIEBvcHQudGV4dFNpemU/XG4gICAgICAgIEBkaXYuc3R5bGUubGVmdCA9IFwiI3tici5sZWZ0ICsgQG9wdC54fXB4XCIgaWYgQG9wdC54P1xuICAgICAgICBAZGl2LnN0eWxlLnRvcCA9IFwiI3tici5ib3R0b20gKyBAb3B0Lnl9cHhcIiBpZiBAb3B0Lnk/XG4gICAgICAgIFxuICAgIG9uTGVhdmU6IChldmVudCwgZSkgPT5cbiAgICAgICAgXG4gICAgICAgIGlmIEBlbGVtP1xuICAgICAgICAgICAgQGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciAgJ21vdXNlbGVhdmUnLCBAb25MZWF2ZVxuICAgICAgICAgICAgQGVsZW0ucmVtb3ZlRXZlbnRMaXN0ZW5lciAgJ21vdXNlZG93bicsICBAb25MZWF2ZVxuICAgICAgICAgICAgXG4gICAgICAgIGNsZWFyVGltZW91dCBAdGltZXJcbiAgICAgICAgQHRpbWVyID0gbnVsbFxuICAgICAgICBAZGl2Py5yZW1vdmUoKVxuICAgICAgICBAZGl2ID0gbnVsbFxuICAgICAgICBcbm1vZHVsZS5leHBvcnRzID0gVG9vbHRpcFxuIl19
//# sourceURL=../coffee/tooltip.coffee