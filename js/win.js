// Generated by CoffeeScript 1.12.7

/*
000   000  000  000   000  
000 0 000  000  0000  000  
000000000  000  000 0 000  
000   000  000  000  0000  
00     00  000  000   000
 */

(function() {
  var $, Win, _, elem, keyinfo, log, popup, pos, post, prefs, ref, scheme, slash, stopEvent, str, title,
    bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  ref = require('./kxk'), keyinfo = ref.keyinfo, title = ref.title, scheme = ref.scheme, stopEvent = ref.stopEvent, prefs = ref.prefs, slash = ref.slash, post = ref.post, elem = ref.elem, popup = ref.popup, pos = ref.pos, str = ref.str, log = ref.log, $ = ref.$, _ = ref._;

  Win = (function() {
    function Win(opt) {
      var electron;
      this.opt = opt;
      this.onKeyDown = bind(this.onKeyDown, this);
      this.onContextMenu = bind(this.onContextMenu, this);
      this.onMenuAction = bind(this.onMenuAction, this);
      prefs.init();
      electron = require('electron');
      this.win = window.win = electron.remote.getCurrentWindow();
      this.id = window.winID = this.win.id;
      post.on('menuAction', this.onMenuAction);
      window.titlebar = new title(this.opt);
      document.body.addEventListener('contextmenu', this.onContextMenu);
      document.addEventListener('keydown', this.onKeyDown);
      scheme.set(prefs.get('scheme', 'dark'));
    }

    Win.prototype.onMenuAction = function(action, args) {
      switch (action) {
        case 'About':
          return post.toMain('showAbout');
        case 'Save':
          return post.toMain('saveBuffer');
        case 'Quit':
          return post.toMain('quitApp');
      }
    };

    Win.prototype.onContextMenu = function(event) {
      var absPos, items;
      absPos = pos(event);
      if (absPos == null) {
        absPos = pos($("#main").getBoundingClientRect().left, $("#main").getBoundingClientRect().top);
      }
      items = _.clone(window.titlebar.menuTemplate());
      items.unshift({
        text: 'Clear',
        accel: 'ctrl+k'
      });
      return popup.menu({
        items: items,
        x: absPos.x,
        y: absPos.y
      });
    };

    Win.prototype.onKeyDown = function(event) {
      var info;
      if ('unhandled' !== window.titlebar.handleKey(event, true)) {
        return stopEvent(event);
      }
      info = keyinfo.forEvent(event);
      if (info.combo) {
        info.event = event;
        return post.emit('combo', info.combo, info);
      }
    };

    return Win;

  })();

  module.exports = Win;

}).call(this);
