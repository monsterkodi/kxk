(function() {
  /*
  000   000  000  000   000  
  000 0 000  000  0000  000  
  000000000  000  000 0 000  
  000   000  000  000  0000  
  00     00  000  000   000  
  */
  var $, Win, _, elem, keyinfo, log, popup, pos, post, prefs, scheme, slash, stopEvent, str, title;

  ({keyinfo, title, scheme, stopEvent, prefs, slash, post, elem, popup, pos, str, log, $, _} = require('./kxk'));

  Win = class Win {
    constructor(opt) {
      var electron;
      // 00     00  00000000  000   000  000   000   0000000    0000000  000000000  000   0000000   000   000  
      // 000   000  000       0000  000  000   000  000   000  000          000     000  000   000  0000  000  
      // 000000000  0000000   000 0 000  000   000  000000000  000          000     000  000   000  000 0 000  
      // 000 0 000  000       000  0000  000   000  000   000  000          000     000  000   000  000  0000  
      // 000   000  00000000  000   000   0000000   000   000   0000000     000     000   0000000   000   000  
      this.onMenuAction = this.onMenuAction.bind(this);
      //  0000000   0000000   000   000  000000000  00000000  000   000  000000000  
      // 000       000   000  0000  000     000     000        000 000      000     
      // 000       000   000  000 0 000     000     0000000     00000       000     
      // 000       000   000  000  0000     000     000        000 000      000     
      //  0000000   0000000   000   000     000     00000000  000   000     000     
      this.onContextMenu = this.onContextMenu.bind(this);
      
      // 000   000  00000000  000   000
      // 000  000   000        000 000
      // 0000000    0000000     00000
      // 000  000   000          000
      // 000   000  00000000     000
      this.onKeyDown = this.onKeyDown.bind(this);
      this.opt = opt;
      window.onerror = function(msg, source, line, col, err) {
        var srcmap;
        srcmap = require('./srcmap');
        srcmap.logErr(err);
        return true;
      };
      prefs.init();
      if (this.opt.icon) {
        log.slog.icon = slash.fileUrl(slash.join(this.opt.dir, this.opt.icon));
      }
      electron = require('electron');
      this.win = window.win = electron.remote.getCurrentWindow();
      this.id = window.winID = this.win.id;
      post.on('menuAction', this.onMenuAction);
      window.titlebar = new title(this.opt);
      document.body.addEventListener('contextmenu', this.onContextMenu);
      document.addEventListener('keydown', this.onKeyDown);
      if (this.opt.scheme !== false) {
        scheme.set(prefs.get('scheme', 'dark'));
      }
    }

    onMenuAction(action, args) {
      switch (action) {
        case 'About':
          return post.toMain('showAbout');
        case 'Save':
          return post.toMain('saveBuffer');
        case 'Quit':
          return post.toMain('quitApp');
      }
    }

    onContextMenu(event) {
      var absPos, items;
      absPos = pos(event);
      if (absPos == null) {
        absPos = pos($("#main").getBoundingClientRect().left, $("#main").getBoundingClientRect().top);
      }
      items = _.clone(window.titlebar.menuTemplate());
      items.unshift({
        text: 'Clear',
        accel: 'ctrl+k'
      });
      return popup.menu({
        items: items,
        x: absPos.x,
        y: absPos.y
      });
    }

    onKeyDown(event) {
      var info;
      if ('unhandled' !== window.titlebar.handleKey(event, true)) {
        return stopEvent(event);
      }
      info = keyinfo.forEvent(event);
      if (info.combo) {
        info.event = event;
        return post.emit('combo', info.combo, info);
      }
    }

  };

  module.exports = Win;

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoid2luLmpzIiwic291cmNlUm9vdCI6Ii4iLCJzb3VyY2VzIjpbIi4uL2NvZmZlZS93aW4uY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQUE7Ozs7Ozs7QUFBQSxNQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsQ0FBQSxFQUFBLElBQUEsRUFBQSxPQUFBLEVBQUEsR0FBQSxFQUFBLEtBQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQSxNQUFBLEVBQUEsS0FBQSxFQUFBLFNBQUEsRUFBQSxHQUFBLEVBQUE7O0VBUUEsQ0FBQSxDQUFFLE9BQUYsRUFBVyxLQUFYLEVBQWtCLE1BQWxCLEVBQTBCLFNBQTFCLEVBQXFDLEtBQXJDLEVBQTRDLEtBQTVDLEVBQW1ELElBQW5ELEVBQXlELElBQXpELEVBQStELEtBQS9ELEVBQXNFLEdBQXRFLEVBQTJFLEdBQTNFLEVBQWdGLEdBQWhGLEVBQXFGLENBQXJGLEVBQXdGLENBQXhGLENBQUEsR0FBOEYsT0FBQSxDQUFRLE9BQVIsQ0FBOUY7O0VBRU0sTUFBTixNQUFBLElBQUE7SUFFSSxXQUFhLElBQUEsQ0FBQTtBQUVULFVBQUEsUUFBQTs7Ozs7O1VBZ0NKLENBQUEsbUJBQUEsQ0FBQSx3QkFoQ0k7Ozs7OztVQTZDSixDQUFBLG9CQUFBLENBQUEseUJBN0NJOzs7Ozs7O1VBaUVKLENBQUEsZ0JBQUEsQ0FBQTtNQW5FYyxJQUFDLENBQUE7TUFFWCxNQUFNLENBQUMsT0FBUCxHQUFpQixRQUFBLENBQUMsR0FBRCxFQUFNLE1BQU4sRUFBYyxJQUFkLEVBQW9CLEdBQXBCLEVBQXlCLEdBQXpCLENBQUE7QUFFYixZQUFBO1FBQUEsTUFBQSxHQUFTLE9BQUEsQ0FBUSxVQUFSO1FBQ1QsTUFBTSxDQUFDLE1BQVAsQ0FBYyxHQUFkO2VBQ0E7TUFKYTtNQU1qQixLQUFLLENBQUMsSUFBTixDQUFBO01BRUEsSUFBRyxJQUFDLENBQUEsR0FBRyxDQUFDLElBQVI7UUFDSSxHQUFHLENBQUMsSUFBSSxDQUFDLElBQVQsR0FBZ0IsS0FBSyxDQUFDLE9BQU4sQ0FBYyxLQUFLLENBQUMsSUFBTixDQUFXLElBQUMsQ0FBQSxHQUFHLENBQUMsR0FBaEIsRUFBcUIsSUFBQyxDQUFBLEdBQUcsQ0FBQyxJQUExQixDQUFkLEVBRHBCOztNQUdBLFFBQUEsR0FBVyxPQUFBLENBQVEsVUFBUjtNQUNYLElBQUMsQ0FBQSxHQUFELEdBQU8sTUFBTSxDQUFDLEdBQVAsR0FBYSxRQUFRLENBQUMsTUFBTSxDQUFDLGdCQUFoQixDQUFBO01BQ3BCLElBQUMsQ0FBQSxFQUFELEdBQU8sTUFBTSxDQUFDLEtBQVAsR0FBZSxJQUFDLENBQUEsR0FBRyxDQUFDO01BRTNCLElBQUksQ0FBQyxFQUFMLENBQVEsWUFBUixFQUFzQixJQUFDLENBQUEsWUFBdkI7TUFFQSxNQUFNLENBQUMsUUFBUCxHQUFrQixJQUFJLEtBQUosQ0FBVSxJQUFDLENBQUEsR0FBWDtNQUVsQixRQUFRLENBQUMsSUFBSSxDQUFDLGdCQUFkLENBQStCLGFBQS9CLEVBQThDLElBQUMsQ0FBQSxhQUEvQztNQUVBLFFBQVEsQ0FBQyxnQkFBVCxDQUEwQixTQUExQixFQUFxQyxJQUFDLENBQUEsU0FBdEM7TUFFQSxJQUFHLElBQUMsQ0FBQSxHQUFHLENBQUMsTUFBTCxLQUFlLEtBQWxCO1FBQ0ksTUFBTSxDQUFDLEdBQVAsQ0FBVyxLQUFLLENBQUMsR0FBTixDQUFVLFFBQVYsRUFBb0IsTUFBcEIsQ0FBWCxFQURKOztJQXpCUzs7SUFrQ2IsWUFBYyxDQUFDLE1BQUQsRUFBUyxJQUFULENBQUE7QUFFVixjQUFPLE1BQVA7QUFBQSxhQUNTLE9BRFQ7aUJBQ3NCLElBQUksQ0FBQyxNQUFMLENBQVksV0FBWjtBQUR0QixhQUVTLE1BRlQ7aUJBRXNCLElBQUksQ0FBQyxNQUFMLENBQVksWUFBWjtBQUZ0QixhQUdTLE1BSFQ7aUJBR3NCLElBQUksQ0FBQyxNQUFMLENBQVksU0FBWjtBQUh0QjtJQUZVOztJQWFkLGFBQWUsQ0FBQyxLQUFELENBQUE7QUFFWCxVQUFBLE1BQUEsRUFBQTtNQUFBLE1BQUEsR0FBUyxHQUFBLENBQUksS0FBSjtNQUNULElBQU8sY0FBUDtRQUNJLE1BQUEsR0FBUyxHQUFBLENBQUksQ0FBQSxDQUFFLE9BQUYsQ0FBVSxDQUFDLHFCQUFYLENBQUEsQ0FBa0MsQ0FBQyxJQUF2QyxFQUE2QyxDQUFBLENBQUUsT0FBRixDQUFVLENBQUMscUJBQVgsQ0FBQSxDQUFrQyxDQUFDLEdBQWhGLEVBRGI7O01BR0EsS0FBQSxHQUFRLENBQUMsQ0FBQyxLQUFGLENBQVEsTUFBTSxDQUFDLFFBQVEsQ0FBQyxZQUFoQixDQUFBLENBQVI7TUFDUixLQUFLLENBQUMsT0FBTixDQUFjO1FBQUEsSUFBQSxFQUFLLE9BQUw7UUFBYyxLQUFBLEVBQU07TUFBcEIsQ0FBZDthQUVBLEtBQUssQ0FBQyxJQUFOLENBQ0k7UUFBQSxLQUFBLEVBQVEsS0FBUjtRQUNBLENBQUEsRUFBUSxNQUFNLENBQUMsQ0FEZjtRQUVBLENBQUEsRUFBUSxNQUFNLENBQUM7TUFGZixDQURKO0lBVFc7O0lBb0JmLFNBQVcsQ0FBQyxLQUFELENBQUE7QUFFUCxVQUFBO01BQUEsSUFBMkIsV0FBQSxLQUFlLE1BQU0sQ0FBQyxRQUFRLENBQUMsU0FBaEIsQ0FBMEIsS0FBMUIsRUFBaUMsSUFBakMsQ0FBMUM7QUFBQSxlQUFPLFNBQUEsQ0FBVSxLQUFWLEVBQVA7O01BRUEsSUFBQSxHQUFPLE9BQU8sQ0FBQyxRQUFSLENBQWlCLEtBQWpCO01BRVAsSUFBRyxJQUFJLENBQUMsS0FBUjtRQUNJLElBQUksQ0FBQyxLQUFMLEdBQWE7ZUFDYixJQUFJLENBQUMsSUFBTCxDQUFVLE9BQVYsRUFBbUIsSUFBSSxDQUFDLEtBQXhCLEVBQStCLElBQS9CLEVBRko7O0lBTk87O0VBckVmOztFQStFQSxNQUFNLENBQUMsT0FBUCxHQUFpQjtBQXpGakIiLCJzb3VyY2VzQ29udGVudCI6WyIjIyNcbjAwMCAgIDAwMCAgMDAwICAwMDAgICAwMDAgIFxuMDAwIDAgMDAwICAwMDAgIDAwMDAgIDAwMCAgXG4wMDAwMDAwMDAgIDAwMCAgMDAwIDAgMDAwICBcbjAwMCAgIDAwMCAgMDAwICAwMDAgIDAwMDAgIFxuMDAgICAgIDAwICAwMDAgIDAwMCAgIDAwMCAgXG4jIyNcblxueyBrZXlpbmZvLCB0aXRsZSwgc2NoZW1lLCBzdG9wRXZlbnQsIHByZWZzLCBzbGFzaCwgcG9zdCwgZWxlbSwgcG9wdXAsIHBvcywgc3RyLCBsb2csICQsIF8gfSA9IHJlcXVpcmUgJy4va3hrJ1xuXG5jbGFzcyBXaW5cbiAgICBcbiAgICBjb25zdHJ1Y3RvcjogKEBvcHQpIC0+XG4gICAgICAgIFxuICAgICAgICB3aW5kb3cub25lcnJvciA9IChtc2csIHNvdXJjZSwgbGluZSwgY29sLCBlcnIpIC0+XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIHNyY21hcCA9IHJlcXVpcmUgJy4vc3JjbWFwJ1xuICAgICAgICAgICAgc3JjbWFwLmxvZ0VyciBlcnJcbiAgICAgICAgICAgIHRydWVcbiAgICAgICAgXG4gICAgICAgIHByZWZzLmluaXQoKVxuICAgICAgICBcbiAgICAgICAgaWYgQG9wdC5pY29uXG4gICAgICAgICAgICBsb2cuc2xvZy5pY29uID0gc2xhc2guZmlsZVVybCBzbGFzaC5qb2luIEBvcHQuZGlyLCBAb3B0Lmljb25cbiAgICAgICAgXG4gICAgICAgIGVsZWN0cm9uID0gcmVxdWlyZSAnZWxlY3Ryb24nXG4gICAgICAgIEB3aW4gPSB3aW5kb3cud2luID0gZWxlY3Ryb24ucmVtb3RlLmdldEN1cnJlbnRXaW5kb3coKVxuICAgICAgICBAaWQgID0gd2luZG93LndpbklEID0gQHdpbi5pZFxuXG4gICAgICAgIHBvc3Qub24gJ21lbnVBY3Rpb24nLCBAb25NZW51QWN0aW9uXG4gICAgICAgIFxuICAgICAgICB3aW5kb3cudGl0bGViYXIgPSBuZXcgdGl0bGUgQG9wdFxuICAgICAgICBcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hZGRFdmVudExpc3RlbmVyICdjb250ZXh0bWVudScsIEBvbkNvbnRleHRNZW51XG4gICAgICAgIFxuICAgICAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyICdrZXlkb3duJywgQG9uS2V5RG93blxuICAgICAgICBcbiAgICAgICAgaWYgQG9wdC5zY2hlbWUgIT0gZmFsc2VcbiAgICAgICAgICAgIHNjaGVtZS5zZXQgcHJlZnMuZ2V0ICdzY2hlbWUnLCAnZGFyaydcblxuICAgICMgMDAgICAgIDAwICAwMDAwMDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgICAwMDAwMDAwICAgIDAwMDAwMDAgIDAwMDAwMDAwMCAgMDAwICAgMDAwMDAwMCAgIDAwMCAgIDAwMCAgXG4gICAgIyAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAwICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAgICAgICAgMDAwICAgICAwMDAgIDAwMCAgIDAwMCAgMDAwMCAgMDAwICBcbiAgICAjIDAwMDAwMDAwMCAgMDAwMDAwMCAgIDAwMCAwIDAwMCAgMDAwICAgMDAwICAwMDAwMDAwMDAgIDAwMCAgICAgICAgICAwMDAgICAgIDAwMCAgMDAwICAgMDAwICAwMDAgMCAwMDAgIFxuICAgICMgMDAwIDAgMDAwICAwMDAgICAgICAgMDAwICAwMDAwICAwMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgICAgICAgIDAwMCAgICAgMDAwICAwMDAgICAwMDAgIDAwMCAgMDAwMCAgXG4gICAgIyAwMDAgICAwMDAgIDAwMDAwMDAwICAwMDAgICAwMDAgICAwMDAwMDAwICAgMDAwICAgMDAwICAgMDAwMDAwMCAgICAgMDAwICAgICAwMDAgICAwMDAwMDAwICAgMDAwICAgMDAwICBcbiAgICBcbiAgICBvbk1lbnVBY3Rpb246IChhY3Rpb24sIGFyZ3MpID0+XG4gICAgICAgIFxuICAgICAgICBzd2l0Y2ggYWN0aW9uXG4gICAgICAgICAgICB3aGVuICdBYm91dCcgdGhlbiBwb3N0LnRvTWFpbiAnc2hvd0Fib3V0J1xuICAgICAgICAgICAgd2hlbiAnU2F2ZScgIHRoZW4gcG9zdC50b01haW4gJ3NhdmVCdWZmZXInXG4gICAgICAgICAgICB3aGVuICdRdWl0JyAgdGhlbiBwb3N0LnRvTWFpbiAncXVpdEFwcCdcblxuICAgICMgIDAwMDAwMDAgICAwMDAwMDAwICAgMDAwICAgMDAwICAwMDAwMDAwMDAgIDAwMDAwMDAwICAwMDAgICAwMDAgIDAwMDAwMDAwMCAgXG4gICAgIyAwMDAgICAgICAgMDAwICAgMDAwICAwMDAwICAwMDAgICAgIDAwMCAgICAgMDAwICAgICAgICAwMDAgMDAwICAgICAgMDAwICAgICBcbiAgICAjIDAwMCAgICAgICAwMDAgICAwMDAgIDAwMCAwIDAwMCAgICAgMDAwICAgICAwMDAwMDAwICAgICAwMDAwMCAgICAgICAwMDAgICAgIFxuICAgICMgMDAwICAgICAgIDAwMCAgIDAwMCAgMDAwICAwMDAwICAgICAwMDAgICAgIDAwMCAgICAgICAgMDAwIDAwMCAgICAgIDAwMCAgICAgXG4gICAgIyAgMDAwMDAwMCAgIDAwMDAwMDAgICAwMDAgICAwMDAgICAgIDAwMCAgICAgMDAwMDAwMDAgIDAwMCAgIDAwMCAgICAgMDAwICAgICBcbiAgICBcbiAgICBvbkNvbnRleHRNZW51OiAoZXZlbnQpID0+XG4gICAgICAgIFxuICAgICAgICBhYnNQb3MgPSBwb3MgZXZlbnRcbiAgICAgICAgaWYgbm90IGFic1Bvcz9cbiAgICAgICAgICAgIGFic1BvcyA9IHBvcyAkKFwiI21haW5cIikuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCkubGVmdCwgJChcIiNtYWluXCIpLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcFxuICAgICAgICAgICBcbiAgICAgICAgaXRlbXMgPSBfLmNsb25lIHdpbmRvdy50aXRsZWJhci5tZW51VGVtcGxhdGUoKVxuICAgICAgICBpdGVtcy51bnNoaWZ0IHRleHQ6J0NsZWFyJywgYWNjZWw6J2N0cmwraydcbiAgICAgICAgICAgIFxuICAgICAgICBwb3B1cC5tZW51XG4gICAgICAgICAgICBpdGVtczogIGl0ZW1zXG4gICAgICAgICAgICB4OiAgICAgIGFic1Bvcy54XG4gICAgICAgICAgICB5OiAgICAgIGFic1Bvcy55XG4gICAgXG4gICAgIyAwMDAgICAwMDAgIDAwMDAwMDAwICAwMDAgICAwMDBcbiAgICAjIDAwMCAgMDAwICAgMDAwICAgICAgICAwMDAgMDAwXG4gICAgIyAwMDAwMDAwICAgIDAwMDAwMDAgICAgIDAwMDAwXG4gICAgIyAwMDAgIDAwMCAgIDAwMCAgICAgICAgICAwMDBcbiAgICAjIDAwMCAgIDAwMCAgMDAwMDAwMDAgICAgIDAwMFxuICAgIFxuICAgIG9uS2V5RG93bjogKGV2ZW50KSA9PlxuICAgIFxuICAgICAgICByZXR1cm4gc3RvcEV2ZW50KGV2ZW50KSBpZiAndW5oYW5kbGVkJyAhPSB3aW5kb3cudGl0bGViYXIuaGFuZGxlS2V5IGV2ZW50LCB0cnVlXG4gICAgICAgIFxuICAgICAgICBpbmZvID0ga2V5aW5mby5mb3JFdmVudCBldmVudFxuICAgIFxuICAgICAgICBpZiBpbmZvLmNvbWJvXG4gICAgICAgICAgICBpbmZvLmV2ZW50ID0gZXZlbnRcbiAgICAgICAgICAgIHBvc3QuZW1pdCAnY29tYm8nLCBpbmZvLmNvbWJvLCBpbmZvXG4gICAgXG5tb2R1bGUuZXhwb3J0cyA9IFdpblxuIl19
//# sourceURL=../coffee/win.coffee