(function() {
  /*
  00000000   00000000   00000000  00000000   0000000
  000   000  000   000  000       000       000     
  00000000   0000000    0000000   000000    0000000 
  000        000   000  000       000            000
  000        000   000  00000000  000       0000000 
  */
  var Prefs, error, fs, log, slash, store;

  ({store, slash, error, fs, log} = require('./kxk'));

  Prefs = (function() {
    class Prefs {
      static init(defs = {}) {
        if (this.store != null) {
          return error('prefs.init -- duplicate stores?');
        }
        this.store = new store('prefs', {
          defaults: defs
        });
        this.store.on('willSave', this.unwatch);
        this.store.on('didSave', this.watch);
        return this.watch();
      }

      static unwatch() {
        var ref;
        if (Prefs.store.app == null) {
          return;
        }
        if ((ref = Prefs.watcher) != null) {
          ref.close();
        }
        return Prefs.watcher = null;
      }

      static watch() {
        if (Prefs.store.app == null) {
          return;
        }
        slash.touch(Prefs.store.file);
        Prefs.unwatch();
        Prefs.watcher = fs.watch(Prefs.store.file);
        return Prefs.watcher.on('change', Prefs.onFileChange).on('rename', Prefs.onFileUnlink).on('error', function(err) {
          return log('Prefs watch error', err);
        });
      }

      static onFileChange() {
        return Prefs.store.reload();
      }

      static onFileUnlink() {
        Prefs.unwatch();
        return Prefs.store.clear();
      }

      static get(key, value) {
        if (this.store) {
          return this.store.get(key, value);
        } else {
          return value;
        }
      }

      static set(key, value) {
        this.unwatch();
        this.store.set(key, value);
        return this.watch();
      }

      static del(key, value) {
        this.unwatch();
        this.store.del(key);
        return this.watch();
      }

      static save() {
        var ref;
        return (ref = this.store) != null ? ref.save() : void 0;
      }

    };

    Prefs.store = null;

    Prefs.watcher = null;

    return Prefs;

  }).call(this);

  module.exports = Prefs;

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJlZnMuanMiLCJzb3VyY2VSb290IjoiLiIsInNvdXJjZXMiOlsiLi4vY29mZmVlL3ByZWZzLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFBOzs7Ozs7O0FBQUEsTUFBQSxLQUFBLEVBQUEsS0FBQSxFQUFBLEVBQUEsRUFBQSxHQUFBLEVBQUEsS0FBQSxFQUFBOztFQVFBLENBQUEsQ0FBRSxLQUFGLEVBQVMsS0FBVCxFQUFnQixLQUFoQixFQUF1QixFQUF2QixFQUEyQixHQUEzQixDQUFBLEdBQW1DLE9BQUEsQ0FBUSxPQUFSLENBQW5DOztFQUVNO0lBQU4sTUFBQSxNQUFBO01BS1csT0FBTixJQUFNLENBQUMsT0FBSyxDQUFBLENBQU4sQ0FBQTtRQUVILElBQWtELGtCQUFsRDtBQUFBLGlCQUFPLEtBQUEsQ0FBTSxpQ0FBTixFQUFQOztRQUNBLElBQUMsQ0FBQSxLQUFELEdBQVMsSUFBSSxLQUFKLENBQVUsT0FBVixFQUFtQjtVQUFBLFFBQUEsRUFBUztRQUFULENBQW5CO1FBQ1QsSUFBQyxDQUFBLEtBQUssQ0FBQyxFQUFQLENBQVUsVUFBVixFQUFzQixJQUFDLENBQUEsT0FBdkI7UUFDQSxJQUFDLENBQUEsS0FBSyxDQUFDLEVBQVAsQ0FBVSxTQUFWLEVBQXNCLElBQUMsQ0FBQSxLQUF2QjtlQUNBLElBQUMsQ0FBQSxLQUFELENBQUE7TUFORzs7TUFRRyxPQUFULE9BQVMsQ0FBQSxDQUFBO0FBRU4sWUFBQTtRQUFBLElBQWMsdUJBQWQ7QUFBQSxpQkFBQTs7O2FBRVEsQ0FBRSxLQUFWLENBQUE7O2VBQ0EsS0FBQyxDQUFBLE9BQUQsR0FBVztNQUxMOztNQU9GLE9BQVAsS0FBTyxDQUFBLENBQUE7UUFFSixJQUFjLHVCQUFkO0FBQUEsaUJBQUE7O1FBRUEsS0FBSyxDQUFDLEtBQU4sQ0FBWSxLQUFDLENBQUEsS0FBSyxDQUFDLElBQW5CO1FBRUEsS0FBQyxDQUFBLE9BQUQsQ0FBQTtRQUNBLEtBQUMsQ0FBQSxPQUFELEdBQVcsRUFBRSxDQUFDLEtBQUgsQ0FBUyxLQUFDLENBQUEsS0FBSyxDQUFDLElBQWhCO2VBQ1gsS0FBQyxDQUFBLE9BQ0csQ0FBQyxFQURMLENBQ1EsUUFEUixFQUNrQixLQUFDLENBQUEsWUFEbkIsQ0FFSSxDQUFDLEVBRkwsQ0FFUSxRQUZSLEVBRWtCLEtBQUMsQ0FBQSxZQUZuQixDQUdJLENBQUMsRUFITCxDQUdRLE9BSFIsRUFHa0IsUUFBQSxDQUFDLEdBQUQsQ0FBQTtpQkFBUyxHQUFBLENBQUksbUJBQUosRUFBeUIsR0FBekI7UUFBVCxDQUhsQjtNQVJJOztNQWFPLE9BQWQsWUFBYyxDQUFBLENBQUE7ZUFBRyxLQUFDLENBQUEsS0FBSyxDQUFDLE1BQVAsQ0FBQTtNQUFIOztNQUNBLE9BQWQsWUFBYyxDQUFBLENBQUE7UUFBRyxLQUFDLENBQUEsT0FBRCxDQUFBO2VBQVksS0FBQyxDQUFBLEtBQUssQ0FBQyxLQUFQLENBQUE7TUFBZjs7TUFFUixPQUFOLEdBQU0sQ0FBQyxHQUFELEVBQU0sS0FBTixDQUFBO1FBQWdCLElBQUcsSUFBQyxDQUFBLEtBQUo7aUJBQWUsSUFBQyxDQUFBLEtBQUssQ0FBQyxHQUFQLENBQVcsR0FBWCxFQUFnQixLQUFoQixFQUFmO1NBQUEsTUFBQTtpQkFBMEMsTUFBMUM7O01BQWhCOztNQUNBLE9BQU4sR0FBTSxDQUFDLEdBQUQsRUFBTSxLQUFOLENBQUE7UUFBZ0IsSUFBQyxDQUFBLE9BQUQsQ0FBQTtRQUFZLElBQUMsQ0FBQSxLQUFLLENBQUMsR0FBUCxDQUFXLEdBQVgsRUFBZ0IsS0FBaEI7ZUFBd0IsSUFBQyxDQUFBLEtBQUQsQ0FBQTtNQUFwRDs7TUFDQSxPQUFOLEdBQU0sQ0FBQyxHQUFELEVBQU0sS0FBTixDQUFBO1FBQWdCLElBQUMsQ0FBQSxPQUFELENBQUE7UUFBWSxJQUFDLENBQUEsS0FBSyxDQUFDLEdBQVAsQ0FBVyxHQUFYO2VBQWlCLElBQUMsQ0FBQSxLQUFELENBQUE7TUFBN0M7O01BQ2EsT0FBbkIsSUFBbUIsQ0FBQSxDQUFBO0FBQUcsWUFBQTsrQ0FBTSxDQUFFLElBQVIsQ0FBQTtNQUFIOztJQXZDeEI7O0lBRUksS0FBQyxDQUFBLEtBQUQsR0FBVzs7SUFDWCxLQUFDLENBQUEsT0FBRCxHQUFXOzs7Ozs7RUFzQ2YsTUFBTSxDQUFDLE9BQVAsR0FBaUI7QUFuRGpCIiwic291cmNlc0NvbnRlbnQiOlsiIyMjXG4wMDAwMDAwMCAgIDAwMDAwMDAwICAgMDAwMDAwMDAgIDAwMDAwMDAwICAgMDAwMDAwMFxuMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMCAgICAgICAwMDAgICAgICAgMDAwICAgICBcbjAwMDAwMDAwICAgMDAwMDAwMCAgICAwMDAwMDAwICAgMDAwMDAwICAgIDAwMDAwMDAgXG4wMDAgICAgICAgIDAwMCAgIDAwMCAgMDAwICAgICAgIDAwMCAgICAgICAgICAgIDAwMFxuMDAwICAgICAgICAwMDAgICAwMDAgIDAwMDAwMDAwICAwMDAgICAgICAgMDAwMDAwMCBcbiMjI1xuXG57IHN0b3JlLCBzbGFzaCwgZXJyb3IsIGZzLCBsb2cgfSA9IHJlcXVpcmUgJy4va3hrJ1xuXG5jbGFzcyBQcmVmc1xuICAgIFxuICAgIEBzdG9yZSAgID0gbnVsbFxuICAgIEB3YXRjaGVyID0gbnVsbFxuICAgIFxuICAgIEBpbml0OiAoZGVmcz17fSkgLT4gXG4gICAgICAgIFxuICAgICAgICByZXR1cm4gZXJyb3IgJ3ByZWZzLmluaXQgLS0gZHVwbGljYXRlIHN0b3Jlcz8nIGlmIEBzdG9yZT9cbiAgICAgICAgQHN0b3JlID0gbmV3IHN0b3JlICdwcmVmcycsIGRlZmF1bHRzOmRlZnNcbiAgICAgICAgQHN0b3JlLm9uICd3aWxsU2F2ZScsIEB1bndhdGNoXG4gICAgICAgIEBzdG9yZS5vbiAnZGlkU2F2ZScsICBAd2F0Y2hcbiAgICAgICAgQHdhdGNoKCkgXG4gICAgICBcbiAgICBAdW53YXRjaDogPT5cbiAgICAgICAgXG4gICAgICAgIHJldHVybiBpZiBub3QgQHN0b3JlLmFwcD9cbiAgICAgICAgXG4gICAgICAgIEB3YXRjaGVyPy5jbG9zZSgpXG4gICAgICAgIEB3YXRjaGVyID0gbnVsbFxuICAgICAgICBcbiAgICBAd2F0Y2g6ID0+XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gaWYgbm90IEBzdG9yZS5hcHA/XG4gICAgICAgIFxuICAgICAgICBzbGFzaC50b3VjaCBAc3RvcmUuZmlsZVxuICAgICAgICBcbiAgICAgICAgQHVud2F0Y2goKVxuICAgICAgICBAd2F0Y2hlciA9IGZzLndhdGNoIEBzdG9yZS5maWxlXG4gICAgICAgIEB3YXRjaGVyXG4gICAgICAgICAgICAub24gJ2NoYW5nZScsIEBvbkZpbGVDaGFuZ2VcbiAgICAgICAgICAgIC5vbiAncmVuYW1lJywgQG9uRmlsZVVubGlua1xuICAgICAgICAgICAgLm9uICdlcnJvcicgLCAoZXJyKSAtPiBsb2cgJ1ByZWZzIHdhdGNoIGVycm9yJywgZXJyXG4gICAgICAgIFxuICAgIEBvbkZpbGVDaGFuZ2U6ID0+IEBzdG9yZS5yZWxvYWQoKVxuICAgIEBvbkZpbGVVbmxpbms6ID0+IEB1bndhdGNoKCk7IEBzdG9yZS5jbGVhcigpXG4gICAgICAgICAgICBcbiAgICBAZ2V0OiAgKGtleSwgdmFsdWUpIC0+IGlmIEBzdG9yZSB0aGVuIEBzdG9yZS5nZXQga2V5LCB2YWx1ZSBlbHNlIHZhbHVlXG4gICAgQHNldDogIChrZXksIHZhbHVlKSAtPiBAdW53YXRjaCgpOyBAc3RvcmUuc2V0KGtleSwgdmFsdWUpOyBAd2F0Y2goKVxuICAgIEBkZWw6ICAoa2V5LCB2YWx1ZSkgLT4gQHVud2F0Y2goKTsgQHN0b3JlLmRlbChrZXkpOyBAd2F0Y2goKVxuICAgIEBzYXZlOiAgICAgICAgICAgICAgLT4gQHN0b3JlPy5zYXZlKClcbiAgICAgICAgXG5tb2R1bGUuZXhwb3J0cyA9IFByZWZzXG4iXX0=
//# sourceURL=../coffee/prefs.coffee