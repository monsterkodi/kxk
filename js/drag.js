(function() {
  /*
  0000000    00000000    0000000    0000000 
  000   000  000   000  000   000  000      
  000   000  0000000    000000000  000  0000
  000   000  000   000  000   000  000   000
  0000000    000   000  000   000   0000000 
  */
  var $, Drag, _, def, error, log, pos, stopEvent;

  ({def, pos, stopEvent, error, log, $, _} = require('./kxk'));

  Drag = class Drag {
    constructor(cfg) {
      var t;
      this.dragStart = this.dragStart.bind(this);
      
      // 00     00   0000000   000   000  00000000  
      // 000   000  000   000  000   000  000       
      // 000000000  000   000   000 000   0000000   
      // 000 0 000  000   000     000     000       
      // 000   000   0000000       0      00000000  
      this.dragMove = this.dragMove.bind(this);
      this.dragUp = this.dragUp.bind(this);
      //  0000000  000000000   0000000   00000000   
      // 000          000     000   000  000   000  
      // 0000000      000     000   000  00000000   
      //      000     000     000   000  000        
      // 0000000      000      0000000   000        
      this.dragStop = this.dragStop.bind(this);
      //  0000000    0000000  000000000  000  000   000   0000000   000000000  00000000  
      // 000   000  000          000     000  000   000  000   000     000     000       
      // 000000000  000          000     000   000 000   000000000     000     0000000   
      // 000   000  000          000     000     000     000   000     000     000       
      // 000   000   0000000     000     000      0      000   000     000     00000000  
      this.activate = this.activate.bind(this);
      this.deactivate = this.deactivate.bind(this);
      _.extend(this, def(cfg, {
        target: null,
        handle: null,
        onStart: null,
        onMove: null,
        onStop: null,
        active: true
      }));
      if (_.isString(this.target)) {
        t = $(this.target);
        if (t == null) {
          return error("Drag -- can't find drag target with id", this.target);
        }
        this.target = t;
      }
      if (this.target == null) {
        return error("Drag -- can't find drag target");
      }
      if ((this.onStart != null) && !_.isFunction(this.onStart)) {
        error("Drag -- onStart not a function?");
      }
      if ((this.onMove != null) && !_.isFunction(this.onMove)) {
        error("Drag -- onMove not a function?");
      }
      if ((this.onEnd != null) && !_.isFunction(this.onEnd)) {
        error("Drag -- onEnd not a function?");
      }
      this.dragging = false;
      this.listening = false;
      if (_.isString(this.handle)) {
        this.handle = $(this.handle);
      }
      if (this.handle == null) {
        this.handle = this.target;
      }
      if (this.active) {
        this.activate();
      }
    }

    //  0000000  000000000   0000000   00000000   000000000  
    // 000          000     000   000  000   000     000     
    // 0000000      000     000000000  0000000       000     
    //      000     000     000   000  000   000     000     
    // 0000000      000     000   000  000   000     000     
    start(p, event) {
      if (!this.dragging && this.listening) {
        this.dragging = true;
        this.startPos = p;
        this.pos = p;
        if ('skip' === (typeof this.onStart === "function" ? this.onStart(this, event) : void 0)) {
          delete this.startPos;
          this.dragging = false;
          return this;
        }
        this.lastPos = p;
        stopEvent(event);
        document.addEventListener('mousemove', this.dragMove);
        document.addEventListener('mouseup', this.dragUp);
      }
      return this;
    }

    dragStart(event) {
      return this.start(pos(event), event);
    }

    dragMove(event) {
      if (this.dragging) {
        this.pos = pos(event);
        this.delta = this.lastPos.to(this.pos);
        this.deltaSum = this.startPos.to(this.pos);
        if ((this.constrainKey != null) && event[this.constrainKey]) {
          if (this.constrain == null) {
            this.constrain = Math.abs(this.delta.x) >= Math.abs(this.delta.y) ? pos(1, 0) : pos(0, 1);
          }
          this.delta.x *= this.constrain.x;
          this.delta.y *= this.constrain.y;
        } else {
          delete this.constrain;
        }
        if (typeof this.onMove === "function") {
          this.onMove(this, event);
        }
        this.lastPos = this.pos;
      }
      return this;
    }

    dragUp(event) {
      delete this.constrain;
      return this.dragStop(event);
    }

    dragStop(event) {
      if (this.dragging) {
        document.removeEventListener('mousemove', this.dragMove);
        document.removeEventListener('mouseup', this.dragUp);
        if ((this.onStop != null) && (event != null)) {
          this.onStop(this, event);
        }
        delete this.lastPos;
        delete this.startPos;
        this.dragging = false;
      }
      return this;
    }

    activate() {
      if (!this.listening) {
        this.listening = true;
        this.handle.addEventListener('mousedown', this.dragStart);
      }
      return this;
    }

    deactivate() {
      if (this.listening) {
        this.handle.removeEventListener('mousedown', this.dragStart);
        this.listening = false;
        if (this.dragging) {
          this.dragStop();
        }
      }
      return this;
    }

  };

  module.exports = Drag;

}).call(this);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=../coffee/drag.coffee