(function() {
  /*
  00     00   0000000   000  000   000
  000   000  000   000  000  0000  000
  000000000  000000000  000  000 0 000
  000 0 000  000   000  000  000  0000
  000   000  000   000  000  000   000
  */
  var BrowserWindow, Menu, Tray, _, about, app, args, childp, createWindow, debug, electron, empty, error, fs, karg, log, onSrcChange, pkg, post, prefs, quitApp, saveBounds, sel, showAbout, showWindow, slash, startWatcher, stopWatcher, toggleWindow, tray, watch, watcher, win;

  ({args, prefs, empty, slash, about, karg, post, watch, childp, fs, log, error, _} = require('kxk'));

  electron = require('electron');

  pkg = require('../package.json');

  app = electron.app;

  BrowserWindow = electron.BrowserWindow;

  Tray = electron.Tray;

  Menu = electron.Menu;

  sel = null;

  win = null;

  tray = null;

  debug = false;

  //  0000000   00000000    0000000    0000000
  // 000   000  000   000  000        000
  // 000000000  0000000    000  0000  0000000
  // 000   000  000   000  000   000       000
  // 000   000  000   000   0000000   0000000
  args = args.init("\nnoprefs         don't load preferences      false\nDevTools        open developer tools        false\nwatch           watch sources for changes   false\n");

  if (args == null) {
    app.exit(0);
  }

  // 00000000    0000000    0000000  000000000  
  // 000   000  000   000  000          000     
  // 00000000   000   000  0000000      000     
  // 000        000   000       000     000     
  // 000         0000000   0000000      000     
  post.on('showAbout', function() {
    return showAbout();
  });

  post.on('quitApp', function() {
    return quitApp();
  });

  //000   000  000  000   000  0000000     0000000   000   000
  //000 0 000  000  0000  000  000   000  000   000  000 0 000
  //000000000  000  000 0 000  000   000  000   000  000000000
  //000   000  000  000  0000  000   000  000   000  000   000
  //00     00  000  000   000  0000000     0000000   00     00
  toggleWindow = function() {
    var ref;
    if (win != null ? win.isVisible() : void 0) {
      win.hide();
      return (ref = app.dock) != null ? ref.hide() : void 0;
    } else {
      return showWindow();
    }
  };

  showWindow = function() {
    var ref;
    if (win != null) {
      win.show();
    } else {
      createWindow();
    }
    return (ref = app.dock) != null ? ref.show() : void 0;
  };

  createWindow = function() {
    var bounds, ref;
    win = new BrowserWindow({
      width: 474,
      height: 900,
      minWidth: 474,
      minHeight: 600,
      backgroundColor: '#181818',
      fullscreen: false,
      show: false,
      frame: false,
      resizable: true, // false
      maximizable: true,
      minimizable: true,
      transparent: true,
      autoHideMenuBar: true,
      icon: slash.path(__dirname + '/../img/app.ico')
    });
    bounds = prefs.get('bounds');
    if (bounds != null) {
      win.setPosition(bounds.x, bounds.y);
    }
    win.loadURL(`file://${__dirname}/index.html`);
    if (args.DevTools) {
      win.webContents.openDevTools();
    }
    win.on('closed', function() {
      return win = null;
    });
    win.on('resize', saveBounds);
    win.on('move', saveBounds);
    win.on('close', function() {
      var ref;
      return (ref = app.dock) != null ? ref.hide() : void 0;
    });
    win.on('ready-to-show', function() {
      return win.show();
    });
    if ((ref = app.dock) != null) {
      ref.show();
    }
    return win;
  };

  saveBounds = function() {
    if (win != null) {
      return prefs.set('bounds', win.getBounds());
    }
  };

  showAbout = function() {
    var dark;
    dark = 'dark' === prefs.get('scheme', 'dark');
    return about({
      img: `${__dirname}/../img/about.png`,
      color: dark && '#383838' || '#ddd',
      background: dark && '#282828' || '#fff',
      highlight: dark && '#fff' || '#000',
      pkg: pkg
    });
  };

  quitApp = function() {
    stopWatcher();
    saveBounds();
    app.exit(0);
    return process.exit(0);
  };

  app.on('window-all-closed', function(event) {
    return event.preventDefault();
  });

  // 000   000   0000000   000000000   0000000  000   000  00000000  00000000     
  // 000 0 000  000   000     000     000       000   000  000       000   000    
  // 000000000  000000000     000     000       000000000  0000000   0000000      
  // 000   000  000   000     000     000       000   000  000       000   000    
  // 00     00  000   000     000      0000000  000   000  00000000  000   000    
  watcher = null;

  startWatcher = function() {
    watcher = watch.watch(__dirname);
    watcher.on('change', onSrcChange);
    return watcher.on('error', function(err) {
      return error(err);
    });
  };

  stopWatcher = function() {
    if (watcher != null) {
      watcher.close();
      return watcher = null;
    }
  };

  onSrcChange = function(path) {
    if (path === __filename) {
      stopWatcher();
      app.exit(0);
      childp.execSync(`${__dirname}/../node_modules/.bin/electron . -w`, {
        cwd: `${__dirname}/..`,
        encoding: 'utf8',
        stdio: 'inherit',
        shell: true
      });
      return process.exit(0);
    } else {
      return post.toWins('reload');
    }
  };

  
  //00000000   00000000   0000000   0000000    000   000
  //000   000  000       000   000  000   000   000 000
  //0000000    0000000   000000000  000   000    00000
  //000   000  000       000   000  000   000     000
  //000   000  00000000  000   000  0000000       000
  app.on('ready', function() {
    var ref;
    tray = new Tray(`${__dirname}/../img/menu.png`);
    tray.on('click', toggleWindow);
    tray.setContextMenu(Menu.buildFromTemplate([
      {
        label: "Quit",
        click: function() {
          app.exit(0);
          return process.exit(0);
        }
      },
      {
        label: "About",
        click: showAbout
      }
    ]));
    if ((ref = app.dock) != null) {
      ref.hide();
    }
    app.setName(pkg.name);
    if (!args.noprefs) {
      prefs.init({
        shortcut: 'CmdOrCtrl+Alt+C'
      });
    }
    electron.globalShortcut.register(prefs.get('shortcut'), showWindow);
    showWindow();
    if (args.watch) {
      return startWatcher();
    }
  });

  app.setName(pkg.name);

  if (app.makeSingleInstance(showWindow)) {
    app.quit();
    return;
  }

}).call(this);

//# sourceMappingURL=data:application/json;base64,
//# sourceURL=C:/Users/kodi/s/kxk/coffee/main.coffee