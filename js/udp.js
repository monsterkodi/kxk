(function() {
  /*
  000   000  0000000    00000000   
  000   000  000   000  000   000  
  000   000  000   000  00000000   
  000   000  000   000  000        
   0000000   0000000    000        
  */
  var dgram, log, udp;

  log = console.log;

  dgram = require('dgram');

  udp = class udp {
    constructor(opt) {
      this.opt = opt;
      if (this.opt == null) {
        this.opt = {};
      }
      this.port = dgram.createSocket('udp4');
      if (this.opt.onMsg) {
        log('receiver', this.opt);
        this.port.on('listening', () => {
          log('listening', this.port.address().address, this.port.address().port);
          return this.port.setBroadcast(true);
        });
        this.port.on('message', (message, rinfo) => {
          var msg;
          msg = JSON.parse(message.toString());
          log('message', rinfo.address, rinfo.port, msg);
          return this.opt.onMsg(msg);
        });
        this.port.bind(9669);
      } else {
        log('sender', this.opt);
        this.port.bind(() => {
          log('sender bind');
          return this.port.setBroadcast(true);
        });
      }
    }

    send(...args) {
      var buf, msg;
      msg = JSON.stringify(args);
      if (this.opt.debug) {
        log('send', msg);
      }
      buf = new Buffer(msg);
      return this.port.send(buf, 0, buf.length, 9669, '255.255.255.255', function() {
        return log('sent', msg);
      });
    }

  };

  module.exports = udp;

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidWRwLmpzIiwic291cmNlUm9vdCI6Ii4uIiwic291cmNlcyI6WyJjb2ZmZWUvdWRwLmNvZmZlZSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUFBOzs7Ozs7O0FBQUEsTUFBQSxLQUFBLEVBQUEsR0FBQSxFQUFBOztFQVFBLEdBQUEsR0FBUSxPQUFPLENBQUM7O0VBQ2hCLEtBQUEsR0FBUSxPQUFBLENBQVEsT0FBUjs7RUFFRixNQUFOLE1BQUEsSUFBQTtJQUVJLFdBQWEsSUFBQSxDQUFBO01BQUMsSUFBQyxDQUFBOztRQUVYLElBQUMsQ0FBQSxNQUFPLENBQUE7O01BRVIsSUFBQyxDQUFBLElBQUQsR0FBUSxLQUFLLENBQUMsWUFBTixDQUFtQixNQUFuQjtNQUVSLElBQUcsSUFBQyxDQUFBLEdBQUcsQ0FBQyxLQUFSO1FBQ0ksR0FBQSxDQUFJLFVBQUosRUFBZ0IsSUFBQyxDQUFBLEdBQWpCO1FBQ0EsSUFBQyxDQUFBLElBQUksQ0FBQyxFQUFOLENBQVMsV0FBVCxFQUFzQixDQUFBLENBQUEsR0FBQTtVQUNsQixHQUFBLENBQUksV0FBSixFQUFpQixJQUFDLENBQUEsSUFBSSxDQUFDLE9BQU4sQ0FBQSxDQUFlLENBQUMsT0FBakMsRUFBMEMsSUFBQyxDQUFBLElBQUksQ0FBQyxPQUFOLENBQUEsQ0FBZSxDQUFDLElBQTFEO2lCQUNBLElBQUMsQ0FBQSxJQUFJLENBQUMsWUFBTixDQUFtQixJQUFuQjtRQUZrQixDQUF0QjtRQUdBLElBQUMsQ0FBQSxJQUFJLENBQUMsRUFBTixDQUFTLFNBQVQsRUFBb0IsQ0FBQyxPQUFELEVBQVUsS0FBVixDQUFBLEdBQUE7QUFDaEIsY0FBQTtVQUFBLEdBQUEsR0FBTSxJQUFJLENBQUMsS0FBTCxDQUFXLE9BQU8sQ0FBQyxRQUFSLENBQUEsQ0FBWDtVQUNOLEdBQUEsQ0FBSSxTQUFKLEVBQWUsS0FBSyxDQUFDLE9BQXJCLEVBQThCLEtBQUssQ0FBQyxJQUFwQyxFQUEwQyxHQUExQztpQkFDQSxJQUFDLENBQUEsR0FBRyxDQUFDLEtBQUwsQ0FBVyxHQUFYO1FBSGdCLENBQXBCO1FBSUEsSUFBQyxDQUFBLElBQUksQ0FBQyxJQUFOLENBQVcsSUFBWCxFQVRKO09BQUEsTUFBQTtRQVdJLEdBQUEsQ0FBSSxRQUFKLEVBQWMsSUFBQyxDQUFBLEdBQWY7UUFDQSxJQUFDLENBQUEsSUFBSSxDQUFDLElBQU4sQ0FBVyxDQUFBLENBQUEsR0FBQTtVQUNQLEdBQUEsQ0FBSSxhQUFKO2lCQUNBLElBQUMsQ0FBQSxJQUFJLENBQUMsWUFBTixDQUFtQixJQUFuQjtRQUZPLENBQVgsRUFaSjs7SUFOUzs7SUFzQmIsSUFBTSxDQUFBLEdBQUMsSUFBRCxDQUFBO0FBRUYsVUFBQSxHQUFBLEVBQUE7TUFBQSxHQUFBLEdBQU0sSUFBSSxDQUFDLFNBQUwsQ0FBZSxJQUFmO01BQ04sSUFBbUIsSUFBQyxDQUFBLEdBQUcsQ0FBQyxLQUF4QjtRQUFBLEdBQUEsQ0FBSSxNQUFKLEVBQVksR0FBWixFQUFBOztNQUNBLEdBQUEsR0FBTSxJQUFJLE1BQUosQ0FBVyxHQUFYO2FBQ04sSUFBQyxDQUFBLElBQUksQ0FBQyxJQUFOLENBQVcsR0FBWCxFQUFnQixDQUFoQixFQUFtQixHQUFHLENBQUMsTUFBdkIsRUFBK0IsSUFBL0IsRUFBcUMsaUJBQXJDLEVBQXdELFFBQUEsQ0FBQSxDQUFBO2VBQ3BELEdBQUEsQ0FBSSxNQUFKLEVBQVksR0FBWjtNQURvRCxDQUF4RDtJQUxFOztFQXhCVjs7RUFnQ0EsTUFBTSxDQUFDLE9BQVAsR0FBaUI7QUEzQ2pCIiwic291cmNlc0NvbnRlbnQiOlsiIyMjXG4wMDAgICAwMDAgIDAwMDAwMDAgICAgMDAwMDAwMDAgICBcbjAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgIFxuMDAwICAgMDAwICAwMDAgICAwMDAgIDAwMDAwMDAwICAgXG4wMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgICAgICBcbiAwMDAwMDAwICAgMDAwMDAwMCAgICAwMDAgICAgICAgIFxuIyMjXG5cbmxvZyAgID0gY29uc29sZS5sb2dcbmRncmFtID0gcmVxdWlyZSAnZGdyYW0nXG5cbmNsYXNzIHVkcFxuXG4gICAgY29uc3RydWN0b3I6IChAb3B0KSAtPlxuICAgICAgICAgICAgICAgIFxuICAgICAgICBAb3B0ID89IHt9XG4gICAgICAgIFxuICAgICAgICBAcG9ydCA9IGRncmFtLmNyZWF0ZVNvY2tldCAndWRwNCdcbiAgICAgICAgXG4gICAgICAgIGlmIEBvcHQub25Nc2dcbiAgICAgICAgICAgIGxvZyAncmVjZWl2ZXInLCBAb3B0XG4gICAgICAgICAgICBAcG9ydC5vbiAnbGlzdGVuaW5nJywgPT4gXG4gICAgICAgICAgICAgICAgbG9nICdsaXN0ZW5pbmcnLCBAcG9ydC5hZGRyZXNzKCkuYWRkcmVzcywgQHBvcnQuYWRkcmVzcygpLnBvcnRcbiAgICAgICAgICAgICAgICBAcG9ydC5zZXRCcm9hZGNhc3QgdHJ1ZVxuICAgICAgICAgICAgQHBvcnQub24gJ21lc3NhZ2UnLCAobWVzc2FnZSwgcmluZm8pID0+XG4gICAgICAgICAgICAgICAgbXNnID0gSlNPTi5wYXJzZSBtZXNzYWdlLnRvU3RyaW5nKClcbiAgICAgICAgICAgICAgICBsb2cgJ21lc3NhZ2UnLCByaW5mby5hZGRyZXNzLCByaW5mby5wb3J0LCBtc2dcbiAgICAgICAgICAgICAgICBAb3B0Lm9uTXNnIG1zZ1xuICAgICAgICAgICAgQHBvcnQuYmluZCA5NjY5XG4gICAgICAgIGVsc2VcbiAgICAgICAgICAgIGxvZyAnc2VuZGVyJywgQG9wdFxuICAgICAgICAgICAgQHBvcnQuYmluZCA9PiBcbiAgICAgICAgICAgICAgICBsb2cgJ3NlbmRlciBiaW5kJ1xuICAgICAgICAgICAgICAgIEBwb3J0LnNldEJyb2FkY2FzdCB0cnVlXG4gICAgICAgICAgICAgICAgXG4gICAgc2VuZDogKGFyZ3MuLi4pIC0+XG4gICAgICAgIFxuICAgICAgICBtc2cgPSBKU09OLnN0cmluZ2lmeSBhcmdzIFxuICAgICAgICBsb2cgJ3NlbmQnLCBtc2cgaWYgQG9wdC5kZWJ1Z1xuICAgICAgICBidWYgPSBuZXcgQnVmZmVyIG1zZ1xuICAgICAgICBAcG9ydC5zZW5kIGJ1ZiwgMCwgYnVmLmxlbmd0aCwgOTY2OSwgJzI1NS4yNTUuMjU1LjI1NScsIC0+XG4gICAgICAgICAgICBsb2cgJ3NlbnQnLCBtc2dcblxubW9kdWxlLmV4cG9ydHMgPSB1ZHBcbiAgICAiXX0=
//# sourceURL=C:/Users/kodi/s/kxk/coffee/udp.coffee