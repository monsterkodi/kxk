(function() {
  /*
   0000000   00000000    0000000    0000000
  000   000  000   000  000        000     
  000000000  0000000    000  0000  0000000 
  000   000  000   000  000   000       000
  000   000  000   000   0000000   0000000 
  */
  var _, args, empty, error, fs, karg, log, noon, post, slash, valid;

  ({karg, post, slash, noon, empty, valid, fs, error, log, _} = require('./kxk'));

  if (process.type === 'renderer') {
    module.exports = post.get('args');
  } else {
    args = {};
    args.init = function(cfg, kargOpt) {
      var k, kargConfig, kk, o, pkg, pkgDir, pkgJson, ref, ref1, ref2, s, v, vv;
      pkg = kargOpt != null ? kargOpt.pkg : void 0;
      if (pkg == null) {
        pkgDir = slash.pkg(__dirname);
        while (valid(pkgDir) && slash.file(slash.dir(pkgDir)) === 'node_modules') {
          pkgDir = slash.pkg(slash.dir(pkgDir));
        }
        if (valid(pkgDir)) {
          pkgJson = slash.join(pkgDir, 'package.json');
          pkg = require(pkgJson);
          if (empty(pkg)) {
            return error(`args -- no pkg in '${pkgJson}'!`);
          }
        } else {
          return error('args -- no pkg dir!');
        }
      }
      kargConfig = {};
      kargConfig[pkg.name] = {};
      kargConfig.version = pkg.version;
      ref = noon.parse(cfg);
      for (kk in ref) {
        vv = ref[kk];
        o = {};
        s = vv.split(/\s\s+/);
        if (s.length > 0) {
          if (!empty(s[0])) {
            o['?'] = s[0];
          }
        }
        if (s.length > 1) {
          if ((ref1 = s[1]) === '*' || ref1 === '**') {
            o[s[1]] = null;
          } else {
            o['='] = noon.parse(s[1])[0];
          }
        }
        kargConfig[pkg.name][kk] = o;
      }
      delete args.init;
      log('karg', kargConfig, kargOpt);
      ref2 = karg(kargConfig, kargOpt);
      for (k in ref2) {
        v = ref2[k];
        args[k] = v;
      }
      return args;
    };
    post.onGet('args', () => {
      return args;
    });
    module.exports = args;
  }

}).call(this);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXJncy5qcyIsInNvdXJjZVJvb3QiOiIuLiIsInNvdXJjZXMiOlsiY29mZmVlL2FyZ3MuY29mZmVlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQUE7Ozs7Ozs7QUFBQSxNQUFBLENBQUEsRUFBQSxJQUFBLEVBQUEsS0FBQSxFQUFBLEtBQUEsRUFBQSxFQUFBLEVBQUEsSUFBQSxFQUFBLEdBQUEsRUFBQSxJQUFBLEVBQUEsSUFBQSxFQUFBLEtBQUEsRUFBQTs7RUFRQSxDQUFBLENBQUUsSUFBRixFQUFRLElBQVIsRUFBYyxLQUFkLEVBQXFCLElBQXJCLEVBQTJCLEtBQTNCLEVBQWtDLEtBQWxDLEVBQXlDLEVBQXpDLEVBQTZDLEtBQTdDLEVBQW9ELEdBQXBELEVBQXlELENBQXpELENBQUEsR0FBK0QsT0FBQSxDQUFRLE9BQVIsQ0FBL0Q7O0VBRUEsSUFBRyxPQUFPLENBQUMsSUFBUixLQUFnQixVQUFuQjtJQUVJLE1BQU0sQ0FBQyxPQUFQLEdBQWlCLElBQUksQ0FBQyxHQUFMLENBQVMsTUFBVCxFQUZyQjtHQUFBLE1BQUE7SUFNSSxJQUFBLEdBQU8sQ0FBQTtJQUVQLElBQUksQ0FBQyxJQUFMLEdBQVksUUFBQSxDQUFDLEdBQUQsRUFBTSxPQUFOLENBQUE7QUFFUixVQUFBLENBQUEsRUFBQSxVQUFBLEVBQUEsRUFBQSxFQUFBLENBQUEsRUFBQSxHQUFBLEVBQUEsTUFBQSxFQUFBLE9BQUEsRUFBQSxHQUFBLEVBQUEsSUFBQSxFQUFBLElBQUEsRUFBQSxDQUFBLEVBQUEsQ0FBQSxFQUFBO01BQUEsR0FBQSxxQkFBTSxPQUFPLENBQUU7TUFFZixJQUFPLFdBQVA7UUFDSSxNQUFBLEdBQVMsS0FBSyxDQUFDLEdBQU4sQ0FBVSxTQUFWO0FBQ1QsZUFBTSxLQUFBLENBQU0sTUFBTixDQUFBLElBQWtCLEtBQUssQ0FBQyxJQUFOLENBQVcsS0FBSyxDQUFDLEdBQU4sQ0FBVSxNQUFWLENBQVgsQ0FBQSxLQUFnQyxjQUF4RDtVQUNJLE1BQUEsR0FBUyxLQUFLLENBQUMsR0FBTixDQUFVLEtBQUssQ0FBQyxHQUFOLENBQVUsTUFBVixDQUFWO1FBRGI7UUFFQSxJQUFHLEtBQUEsQ0FBTSxNQUFOLENBQUg7VUFDSSxPQUFBLEdBQVUsS0FBSyxDQUFDLElBQU4sQ0FBVyxNQUFYLEVBQW1CLGNBQW5CO1VBQ1YsR0FBQSxHQUFNLE9BQUEsQ0FBUSxPQUFSO1VBQ04sSUFBa0QsS0FBQSxDQUFNLEdBQU4sQ0FBbEQ7QUFBQSxtQkFBTyxLQUFBLENBQU0sQ0FBQSxtQkFBQSxDQUFBLENBQXNCLE9BQXRCLENBQThCLEVBQTlCLENBQU4sRUFBUDtXQUhKO1NBQUEsTUFBQTtBQUtJLGlCQUFPLEtBQUEsQ0FBTSxxQkFBTixFQUxYO1NBSko7O01BV0EsVUFBQSxHQUFhLENBQUE7TUFDYixVQUFXLENBQUEsR0FBRyxDQUFDLElBQUosQ0FBWCxHQUF1QixDQUFBO01BQ3ZCLFVBQVUsQ0FBQyxPQUFYLEdBQXFCLEdBQUcsQ0FBQztBQUV6QjtNQUFBLEtBQUEsU0FBQTs7UUFDSSxDQUFBLEdBQUksQ0FBQTtRQUNKLENBQUEsR0FBSSxFQUFFLENBQUMsS0FBSCxDQUFTLE9BQVQ7UUFFSixJQUFHLENBQUMsQ0FBQyxNQUFGLEdBQVcsQ0FBZDtVQUNJLElBQWlCLENBQUksS0FBQSxDQUFNLENBQUUsQ0FBQSxDQUFBLENBQVIsQ0FBckI7WUFBQSxDQUFFLENBQUEsR0FBQSxDQUFGLEdBQVMsQ0FBRSxDQUFBLENBQUEsRUFBWDtXQURKOztRQUVBLElBQUcsQ0FBQyxDQUFDLE1BQUYsR0FBVyxDQUFkO1VBQ0ksWUFBRyxDQUFFLENBQUEsQ0FBQSxFQUFGLEtBQVMsR0FBVCxJQUFBLElBQUEsS0FBYyxJQUFqQjtZQUNJLENBQUUsQ0FBQSxDQUFFLENBQUEsQ0FBQSxDQUFGLENBQUYsR0FBVSxLQURkO1dBQUEsTUFBQTtZQUdJLENBQUUsQ0FBQSxHQUFBLENBQUYsR0FBUyxJQUFJLENBQUMsS0FBTCxDQUFXLENBQUUsQ0FBQSxDQUFBLENBQWIsQ0FBaUIsQ0FBQSxDQUFBLEVBSDlCO1dBREo7O1FBTUEsVUFBVyxDQUFBLEdBQUcsQ0FBQyxJQUFKLENBQVUsQ0FBQSxFQUFBLENBQXJCLEdBQTJCO01BWi9CO01BY0EsT0FBTyxJQUFJLENBQUM7TUFFWixHQUFBLENBQUksTUFBSixFQUFZLFVBQVosRUFBd0IsT0FBeEI7QUFFQTtNQUFBLEtBQUEsU0FBQTs7UUFDSSxJQUFLLENBQUEsQ0FBQSxDQUFMLEdBQVU7TUFEZDthQUdBO0lBeENRO0lBMENaLElBQUksQ0FBQyxLQUFMLENBQVcsTUFBWCxFQUFtQixDQUFBLENBQUEsR0FBQTthQUFHO0lBQUgsQ0FBbkI7SUFFQSxNQUFNLENBQUMsT0FBUCxHQUFpQixLQXBEckI7O0FBVkEiLCJzb3VyY2VzQ29udGVudCI6WyIjIyNcbiAwMDAwMDAwICAgMDAwMDAwMDAgICAgMDAwMDAwMCAgICAwMDAwMDAwXG4wMDAgICAwMDAgIDAwMCAgIDAwMCAgMDAwICAgICAgICAwMDAgICAgIFxuMDAwMDAwMDAwICAwMDAwMDAwICAgIDAwMCAgMDAwMCAgMDAwMDAwMCBcbjAwMCAgIDAwMCAgMDAwICAgMDAwICAwMDAgICAwMDAgICAgICAgMDAwXG4wMDAgICAwMDAgIDAwMCAgIDAwMCAgIDAwMDAwMDAgICAwMDAwMDAwIFxuIyMjXG5cbnsga2FyZywgcG9zdCwgc2xhc2gsIG5vb24sIGVtcHR5LCB2YWxpZCwgZnMsIGVycm9yLCBsb2csIF8gfSA9IHJlcXVpcmUgJy4va3hrJ1xuXG5pZiBwcm9jZXNzLnR5cGUgPT0gJ3JlbmRlcmVyJ1xuICAgIFxuICAgIG1vZHVsZS5leHBvcnRzID0gcG9zdC5nZXQgJ2FyZ3MnXG4gICAgXG5lbHNlXG4gICAgICAgIFxuICAgIGFyZ3MgPSB7fSBcbiAgICAgICAgXG4gICAgYXJncy5pbml0ID0gKGNmZywga2FyZ09wdCkgLT5cbiAgICAgICAgXG4gICAgICAgIHBrZyA9IGthcmdPcHQ/LnBrZ1xuICAgICAgICBcbiAgICAgICAgaWYgbm90IHBrZz9cbiAgICAgICAgICAgIHBrZ0RpciA9IHNsYXNoLnBrZyBfX2Rpcm5hbWVcbiAgICAgICAgICAgIHdoaWxlIHZhbGlkKHBrZ0RpcikgYW5kIHNsYXNoLmZpbGUoc2xhc2guZGlyIHBrZ0RpcikgPT0gJ25vZGVfbW9kdWxlcydcbiAgICAgICAgICAgICAgICBwa2dEaXIgPSBzbGFzaC5wa2cgc2xhc2guZGlyIHBrZ0RpclxuICAgICAgICAgICAgaWYgdmFsaWQgcGtnRGlyXG4gICAgICAgICAgICAgICAgcGtnSnNvbiA9IHNsYXNoLmpvaW4gcGtnRGlyLCAncGFja2FnZS5qc29uJ1xuICAgICAgICAgICAgICAgIHBrZyA9IHJlcXVpcmUgcGtnSnNvblxuICAgICAgICAgICAgICAgIHJldHVybiBlcnJvciBcImFyZ3MgLS0gbm8gcGtnIGluICcje3BrZ0pzb259JyFcIiBpZiBlbXB0eSBwa2dcbiAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICByZXR1cm4gZXJyb3IgJ2FyZ3MgLS0gbm8gcGtnIGRpciEnXG4gICAgICAgICAgICBcbiAgICAgICAga2FyZ0NvbmZpZyA9IHt9XG4gICAgICAgIGthcmdDb25maWdbcGtnLm5hbWVdID0ge31cbiAgICAgICAga2FyZ0NvbmZpZy52ZXJzaW9uID0gcGtnLnZlcnNpb25cbiAgICAgICAgXG4gICAgICAgIGZvciBrayx2diBvZiBub29uLnBhcnNlIGNmZ1xuICAgICAgICAgICAgbyA9IHt9XG4gICAgICAgICAgICBzID0gdnYuc3BsaXQoL1xcc1xccysvKVxuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiBzLmxlbmd0aCA+IDAgXG4gICAgICAgICAgICAgICAgb1snPyddID0gc1swXSBpZiBub3QgZW1wdHkgc1swXVxuICAgICAgICAgICAgaWYgcy5sZW5ndGggPiAxXG4gICAgICAgICAgICAgICAgaWYgc1sxXSBpbiBbJyonLCAnKionXVxuICAgICAgICAgICAgICAgICAgICBvW3NbMV1dID0gbnVsbFxuICAgICAgICAgICAgICAgIGVsc2VcbiAgICAgICAgICAgICAgICAgICAgb1snPSddID0gbm9vbi5wYXJzZShzWzFdKVswXSBcbiAgICAgICAgICAgIFxuICAgICAgICAgICAga2FyZ0NvbmZpZ1twa2cubmFtZV1ba2tdID0gb1xuICAgICAgICAgICAgXG4gICAgICAgIGRlbGV0ZSBhcmdzLmluaXRcbiAgICAgICAgXG4gICAgICAgIGxvZyAna2FyZycsIGthcmdDb25maWcsIGthcmdPcHRcbiAgICAgICAgXG4gICAgICAgIGZvciBrLHYgb2Yga2FyZyBrYXJnQ29uZmlnLCBrYXJnT3B0XG4gICAgICAgICAgICBhcmdzW2tdID0gdlxuICAgICAgICAgICAgXG4gICAgICAgIGFyZ3NcbiAgICBcbiAgICBwb3N0Lm9uR2V0ICdhcmdzJywgPT4gYXJnc1xuICAgIFxuICAgIG1vZHVsZS5leHBvcnRzID0gYXJnc1xuIl19
//# sourceURL=C:/Users/kodi/s/kxk/coffee/args.coffee