// Generated by CoffeeScript 1.12.7

/*
 0000000   0000000     0000000   000   000  000000000
000   000  000   000  000   000  000   000     000
000000000  0000000    000   000  000   000     000
000   000  000   000  000   000  000   000     000
000   000  0000000     0000000    0000000      000
 */

(function() {
  var About, opener;

  opener = require('opener');

  About = (function() {
    function About() {}

    About.win = null;

    About.url = null;

    About.opt = null;

    About.show = function(opt) {
      var Browser, electron, html, ipc, ref, ref1, ref10, ref11, ref12, ref13, ref14, ref15, ref16, ref17, ref18, ref19, ref2, ref3, ref4, ref5, ref6, ref7, ref8, ref9, url, version, win;
      About.opt = opt;
      electron = require('electron');
      Browser = electron.BrowserWindow;
      ipc = electron.ipcMain;
      About.url = (ref = About.opt) != null ? ref.url : void 0;
      if ((About.url == null) && ((ref1 = About.opt) != null ? (ref2 = ref1.pkg) != null ? (ref3 = ref2.repository) != null ? ref3.url : void 0 : void 0 : void 0)) {
        url = About.opt.pkg.repository.url;
        if (url.startsWith("git+")) {
          url = url.slice(4);
        }
        if (url.endsWith(".git")) {
          url = url.slice(0, url.length - 4);
        }
        About.url = url;
      }
      win = new Browser({
        backgroundColor: (ref4 = (ref5 = About.opt) != null ? ref5.background : void 0) != null ? ref4 : '#222',
        preloadWindow: true,
        center: true,
        hasShadow: true,
        alwaysOnTop: true,
        resizable: false,
        frame: false,
        show: false,
        fullscreenable: false,
        minimizable: false,
        maximizable: false,
        webPreferences: {
          webSecurity: false
        },
        width: (ref6 = (ref7 = About.opt) != null ? ref7.size : void 0) != null ? ref6 : 300,
        height: (ref8 = (ref9 = About.opt) != null ? ref9.size : void 0) != null ? ref8 : 300
      });
      version = (ref10 = (ref11 = About.opt) != null ? ref11.version : void 0) != null ? ref10 : (ref12 = About.opt) != null ? (ref13 = ref12.pkg) != null ? ref13.version : void 0 : void 0;
      html = "<style type=\"text/css\">\n    body {\n        overflow:      hidden;\n        -webkit-user-select: none;\n    }\n    #about {\n        text-align:    center;\n        cursor:        pointer;\n        outline-width: 0;\n        overflow:      hidden;\n    }\n\n    #image {\n        position:      absolute;\n        height:        70%;\n        max-height:    70%;\n        left:          50%;\n        top:           50%;\n        transform:     translate(-50%, -50%);\n    }\n\n    #version {\n        position: absolute;\n        bottom:         " + ((ref14 = (ref15 = About.opt) != null ? ref15.versionOffset : void 0) != null ? ref14 : '7%') + ";\n        left:           0;\n        right:          0;\n        text-align:     center;\n        color:          " + ((ref16 = (ref17 = About.opt) != null ? ref17.color : void 0) != null ? ref16 : '#333') + ";\n        font-family:    Verdana, sans-serif;\n        text-decoration: none;\n    }\n\n    #version:hover {\n        color:          " + ((ref18 = (ref19 = About.opt) != null ? ref19.highlight : void 0) != null ? ref18 : '#f80') + ";\n    }\n\n</style>\n<div id='about' tabindex=0>\n    <img id='image' src=\"file://" + About.opt.img + "\"/>\n    <div id='version'>\n        " + version + "\n    </div>\n</div>\n<script>\n    var electron = require('electron');\n    var ipc = electron.ipcRenderer;\n    var l = document.getElementById('version');\n    l.onclick   = function () { ipc.send('openURL'); }\n    var a = document.getElementById('about');\n    a.onclick   = function () { ipc.send('closeAbout'); }\n    a.onkeydown = function () { ipc.send('closeAbout'); }\n    a.onblur    = function () { ipc.send('blurAbout'); }\n    a.focus()\n</script>";
      ipc.on('openURL', About.openURL);
      ipc.on('closeAbout', About.closeAbout);
      ipc.on('blurAbout', About.blurAbout);
      win.loadURL("data:text/html;charset=utf-8," + encodeURI(html));
      win.on('ready-to-show', function() {
        var ref20;
        win.show();
        if ((ref20 = About.opt) != null ? ref20.debug : void 0) {
          return win.openDevTools();
        }
      });
      About.win = win;
      return win;
    };

    About.blurAbout = function() {
      var ref;
      if (!((ref = About.opt) != null ? ref.debug : void 0)) {
        return About.closeAbout();
      }
    };

    About.closeAbout = function() {
      var electron, ipc, ref;
      electron = require('electron');
      ipc = electron.ipcMain;
      ipc.removeAllListeners('openURL');
      ipc.removeAllListeners('closeAbout');
      if ((ref = About.win) != null) {
        ref.close();
      }
      return About.win = null;
    };

    About.openURL = function() {
      if (About.url != null) {
        return opener(About.url);
      }
    };

    return About;

  })();

  module.exports = About.show;

}).call(this);
